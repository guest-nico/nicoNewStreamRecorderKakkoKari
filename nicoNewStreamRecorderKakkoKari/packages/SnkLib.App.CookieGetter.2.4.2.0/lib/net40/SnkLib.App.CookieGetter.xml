<?xml version="1.0"?>
<doc>
    <assembly>
        <name>SnkLib.App.CookieGetter</name>
    </assembly>
    <members>
        <member name="T:SunokoLibrary.Application.CookieGetters">
            <summary>
            使用可能なICookieImporterを提供します。
            </summary>
        </member>
        <member name="M:SunokoLibrary.Application.CookieGetters.#ctor(System.Boolean,SunokoLibrary.Application.ICookieImporterFactory[])">
            <summary>
            CookieGettersを生成します。
            </summary>
            <param name="includeDefault">既定のFactoryを含めるか</param>
            <param name="factories">追加で登録するFactory</param>
            <exception cref="T:System.ArgumentException">引数factoriesに同一のEngineIdを持つ要素が含まれている場合にスローされます。</exception>
        </member>
        <member name="M:SunokoLibrary.Application.CookieGetters.GetInstancesAsync(System.Boolean)">
            <summary>
            使用できるICookieImporterのリストを取得します。
            </summary>
            <param name="availableOnly">利用可能なものだけを出力するか指定します。</param>
        </member>
        <member name="M:SunokoLibrary.Application.CookieGetters.GetInstanceAsync(SunokoLibrary.Application.CookieSourceInfo,System.Boolean)">
            <summary>
            設定値を指定したICookieImporterを取得します。アプリ終了時に直前まで使用していた
            ICookieImporterのSourceInfoを設定として保存すれば、起動時にSourceInfoをこのメソッドに
            渡す事で適切なICookieImporterを再取得する事ができます。
            </summary>
            <param name="targetInfo">再取得対象のブラウザの構成情報</param>
            <param name="allowDefault">取得不可の場合に既定のCookieImporterを返すかを指定できます。</param>
        </member>
        <member name="P:SunokoLibrary.Application.CookieGetters.Default">
            <summary>
            既定のCookieGettersを取得します。
            </summary>
        </member>
        <member name="T:SunokoLibrary.Application.CookieGetters.Browsers">
            <summary>
            ブラウザの既定ICookieImporterを提供します。
            </summary>
        </member>
        <member name="P:SunokoLibrary.Application.CookieGetters.Browsers.IENormal">
            <summary>
            通常モードのIEのICookieImporterを取得します。
            </summary>
        </member>
        <member name="P:SunokoLibrary.Application.CookieGetters.Browsers.IEProtected">
            <summary>
            保護モードのIEのICookieImporterを取得します。
            </summary>
        </member>
        <member name="P:SunokoLibrary.Application.CookieGetters.Browsers.IEEnhancedProtected">
            <summary>
            拡張保護モードのIEのICookieImporterを取得します。
            </summary>
        </member>
        <member name="P:SunokoLibrary.Application.CookieGetters.Browsers.MicrosoftEdge">
            <summary>
            MicrosoftEdgeのICookieImporterを取得します。
            </summary>
        </member>
        <member name="P:SunokoLibrary.Application.CookieGetters.Browsers.Firefox">
            <summary>
            FirefoxのICookieImporterを取得します。
            </summary>
        </member>
        <member name="P:SunokoLibrary.Application.CookieGetters.Browsers.Chrome">
            <summary>
            ChromeのICookieImporterを取得します。
            </summary>
        </member>
        <member name="T:SunokoLibrary.Application.CookieSourceInfo">
            <summary>
            Cookie取得用の項目を保持します。
            </summary>
        </member>
        <member name="M:SunokoLibrary.Application.CookieSourceInfo.#ctor(System.String,System.String,System.String,System.String,System.Boolean)">
            <summary>
            対象のブラウザの構成情報を指定してインスタンスを生成します。
            </summary>
            <param name="browserName">ブラウザの名前</param>
            <param name="profileName">対象の構成情報にブラウザ側で付けられた固有名称</param>
            <param name="cookiePath">Cookieファイルパス</param>
            <param name="engineId">ブラウザのエンジン識別子</param>
            <param name="isCustomized">ユーザ定義による設定かどうか</param>
        </member>
        <member name="M:SunokoLibrary.Application.CookieSourceInfo.#ctor">
            <summary>
            シリアル化用。使用しないでください。
            </summary>
        </member>
        <member name="P:SunokoLibrary.Application.CookieSourceInfo.IsCustomized">
            <summary>
            ユーザーによるカスタム設定かを取得します。
            </summary>
        </member>
        <member name="P:SunokoLibrary.Application.CookieSourceInfo.BrowserName">
            <summary>
            ブラウザ名を取得します。
            </summary>
        </member>
        <member name="P:SunokoLibrary.Application.CookieSourceInfo.ProfileName">
            <summary>
            プロフィール名を取得します。
            </summary>
        </member>
        <member name="P:SunokoLibrary.Application.CookieSourceInfo.CookiePath">
            <summary>
            Cookieが保存されている場所を取得します。
            </summary>
        </member>
        <member name="P:SunokoLibrary.Application.CookieSourceInfo.EngineId">
            <summary>
            使用されているブラウザエンジンの種類を取得します。
            </summary>
        </member>
        <member name="M:SunokoLibrary.Application.CookieSourceInfo.GenerateCopy(System.String,System.String,System.String)">
            <summary>
            引数で指定された値で上書きしたコピーを生成します。
            </summary>
        </member>
        <member name="T:SunokoLibrary.Application.Browsers.BlinkImporterFactory">
            <summary>
            Chromium系列のブラウザからICookieImporterを取得する基盤クラス
            </summary>
        </member>
        <member name="M:SunokoLibrary.Application.Browsers.BlinkImporterFactory.#ctor(System.String,System.String,System.Int32,System.String,System.String,System.String,System.String,System.String)">
            <summary>
            指定したブラウザ情報でインスタンスを生成します。
            </summary>
            <param name="name">ブラウザ名</param>
            <param name="dataFolder">UserDataのフォルダパス</param>
            <param name="primaryLevel">ブラウザの格</param>
            <param name="cookieFileName">Cookieファイルの名前</param>
            <param name="defaultFolder">デフォルトのプロファイルフォルダの名前</param>
            <param name="profileFolderStarts">デフォルト以外のプロファイルフォルダの名前のプレフィックス</param>
            <param name="stateFileName">ブラウザの設定ファイルの名前</param>
            <param name="engineId">エンジン識別子</param>
        </member>
        <member name="M:SunokoLibrary.Application.Browsers.BlinkImporterFactory.GetDefaultProfiles">
            <summary>
            ユーザのデフォルト環境設定を用いたICookieImporter生成します。
            </summary>
            <returns>長さ1の列挙子</returns>
        </member>
        <member name="M:SunokoLibrary.Application.Browsers.BlinkImporterFactory.GetProfiles">
            <summary>
            ブラウザが持っているデフォルト以外の全ての環境設定からICookieImporterを生成します。
            </summary>
        </member>
        <member name="T:SunokoLibrary.Application.Browsers.ChromeImporterFactory">
            <summary>
            ChromeからICookieImporterを取得します。
            </summary>
        </member>
        <member name="T:SunokoLibrary.Application.Browsers.ChromiumImporterFactory">
            <summary>
            ChromiumからICookieImporterを取得します。
            </summary>
        </member>
        <member name="T:SunokoLibrary.Application.Browsers.ComplexImporterFactory">
            <summary>
            複数のFactoryを内部で保持し、それらを1つのFactoryとして扱えるようにする仕組みを提供します。
            </summary>
        </member>
        <member name="T:SunokoLibrary.Application.Browsers.EdgeImporterFactory">
            <summary>
            SpartanのICookieImporterを取得します。
            </summary>
        </member>
        <member name="T:SunokoLibrary.Application.Browsers.EdgeChromiumImporterFactory">
            <summary>
            MicrosoftEdge(Chromium)からICookieImporterを取得します。
            </summary>
        </member>
        <member name="T:SunokoLibrary.Application.Browsers.FirefoxImporterFactory">
            <summary>
            FirefoxからICookieImporterを取得します。
            </summary>
        </member>
        <member name="T:SunokoLibrary.Application.Browsers.GeckoImporterFactory">
            <summary>
            Firefox系列のブラウザからICookieImporterを取得する基盤クラス
            </summary>
        </member>
        <member name="M:SunokoLibrary.Application.Browsers.GeckoImporterFactory.#ctor(System.String,System.String,System.Int32,System.String,System.String,System.String)">
            <summary>
            指定したブラウザ情報でインスタンスを生成します。
            </summary>
            <param name="name">ブラウザ名</param>
            <param name="dataFolder">対象のブラウザ用の設定フォルダパス</param>
            <param name="primaryLevel">ブラウザの格</param>
            <param name="cookieFileName">Cookieファイルの名前</param>
            <param name="iniFileName">設定ファイルの名前</param>
            <param name="engineId">エンジン識別子</param>
        </member>
        <member name="T:SunokoLibrary.Application.Browsers.GeckoImporterFactory.UserProfile">
            <summary>
            ユーザの環境設定。ブラウザが複数の環境設定を持てる場合に使う。
            </summary>
        </member>
        <member name="M:SunokoLibrary.Application.Browsers.GeckoImporterFactory.UserProfile.GetProfiles(System.String,System.String)">
            <summary>
            Firefoxのプロフィールフォルダ内のフォルダをすべて取得します。
            </summary>
            <returns></returns>
        </member>
        <member name="T:SunokoLibrary.Application.Browsers.IEImporterFactory">
            <summary>
            IE系のすべてのICookieImporterを取得します。
            </summary>
        </member>
        <member name="M:SunokoLibrary.Application.Browsers.IEImporterFactory.GetIECookieImporter">
            <summary>
            非保護モードのIEからCookieを取得するICookieImporterを取得します。
            </summary>
        </member>
        <member name="M:SunokoLibrary.Application.Browsers.IEImporterFactory.GetIEPMCookieImporter">
            <summary>
            保護モードのIEからCookieを取得するICookieImporterを取得します。
            </summary>
        </member>
        <member name="M:SunokoLibrary.Application.Browsers.IEImporterFactory.GetIEEPMCookieImporter">
            <summary>
            拡張保護モードのIEからCookieを取得するICookieImporterを取得します。
            </summary>
        </member>
        <member name="T:SunokoLibrary.Application.Browsers.ImporterFactoryBase">
            <summary>
            ICookieImporterFactoryの実装の作成を支援する基盤クラスです。
            </summary>
        </member>
        <member name="T:SunokoLibrary.Application.Browsers.LunascapeImporterFactory">
            <summary>
            LunascapeからICookieImporterを取得します。
            </summary>
        </member>
        <member name="M:SunokoLibrary.Application.Browsers.LunascapeImporterFactory.LunascapeGeckoBrowserManager.SearchCookieDirectory">
            <summary>
            Lunascape6のプラグインフォルダからFirefoxのCookieが保存されているパスを検索します。
            </summary>
            <returns></returns>
        </member>
        <member name="M:SunokoLibrary.Application.Browsers.LunascapeImporterFactory.LunascapeWebkitBrowserManager.SearchCookieDirectory">
            <summary>
            Lunascape6のプラグインフォルダからFirefoxのCookieが保存されているパスを検索する
            </summary>
            <returns></returns>
        </member>
        <member name="T:SunokoLibrary.Application.Browsers.MaxthonImporterFactory">
            <summary>
            MaxthonからICookieImporterを取得します。
            </summary>
        </member>
        <member name="T:SunokoLibrary.Application.Browsers.OperaWebkitImporterFactory">
            <summary>
            OperaからICookieImporterを取得します。
            </summary>
        </member>
        <member name="T:SunokoLibrary.Application.Browsers.SleipnirImporterFactory">
            <summary>
            SleipnirからICookieImporterを取得します。
            </summary>
        </member>
        <member name="T:SunokoLibrary.Application.Browsers.SmartImporterFactory">
            <summary>
            特定のファイル構造のパターンからブラウザを
            見つけてICookieImporterを取得します。
            </summary>
        </member>
        <member name="M:SunokoLibrary.Application.Browsers.SmartImporterFactory.#ctor(System.String,SunokoLibrary.Application.CookiePathType)">
            <summary>
            パターンを入力してインスタンスを生成します。
            </summary>
            <param name="searchTarget">検索する対象の名前</param>
            <param name="targetType">対象の種類</param>
        </member>
        <member name="T:SunokoLibrary.Application.Browsers.SmartBlinkBrowserManager">
            <summary>
            Chromium系列のブラウザからICookieImporterを取得します。
            </summary>
        </member>
        <member name="T:SunokoLibrary.Application.Browsers.SmartGeckoBrowserManager">
            <summary>
            Gecko系列のブラウザからICookieImporterを取得します。
            </summary>
        </member>
        <member name="T:SunokoLibrary.Application.Browsers.TungstenImporterFactory">
            <summary>
            TungstenからICookieImporterを取得します。
            </summary>
        </member>
        <member name="T:SunokoLibrary.Application.Browsers.WebkitQtImporterFactory">
            <summary>
            WebkitQtからICookieImporterを取得します。
            </summary>
        </member>
        <member name="T:SunokoLibrary.Application.Browsers.BlinkCookieImporter">
            <summary>
            GoogleChromeからCookieを取得します。
            </summary>
        </member>
        <member name="T:SunokoLibrary.Application.Browsers.CookieImporterBase">
            <summary>
            ICookieImporterの実装の作成を支援する基盤クラスです。
            </summary>
        </member>
        <member name="M:SunokoLibrary.Application.Browsers.CookieImporterBase.#ctor(SunokoLibrary.Application.CookieSourceInfo,SunokoLibrary.Application.CookiePathType,System.Int32)">
            <summary>
            指定されたinfoからCookieを取得するICookieImporterを生成します。
            継承時にコンストラクタでcookiePathType, primaryLevelを直接指定し、
            infoの方は引数で受け取る形にする事を推奨します。
            </summary>
            <param name="info">対象のブラウザの構成情報</param>
            <param name="cookiePathType">対象ブラウザのCookieの置き場所の形式</param>
            <param name="primaryLevel">
            並べ替え時に用いられる数値。
            OSブラウザ: 0、有名ブラウザ: 1、派生ブラウザ: 2
            </param>
        </member>
        <member name="M:SunokoLibrary.Application.Browsers.CookieImporterBase.ProtectedGetCookies(System.Uri)">
            <summary>
            Cookie取得処理の本体。
            </summary>
            <param name="targetUrl">Cookieが送信されるURL</param>
            <returns>処理結果の状態</returns>
        </member>
        <member name="M:SunokoLibrary.Application.Browsers.CookieImporterBase.TraceError(SunokoLibrary.Application.ICookieImporter,System.String,System.String)">
            <summary>
            失敗した処理の情報を出力します。
            </summary>
            <param name="target">失敗した処理が行われた対象</param>
            <param name="message">失敗した処理の名前</param>
            <param name="detailMessage">詳細な状況説明文</param>
        </member>
        <member name="T:SunokoLibrary.Application.Browsers.GeckoCookieImporter">
            <summary>
            FirefoxからCookieを取得します。
            </summary>
        </member>
        <member name="T:SunokoLibrary.Application.Browsers.IECookieImporter">
            <summary>
            IEからCookieを取得します。
            </summary>
        </member>
        <member name="T:SunokoLibrary.Application.Browsers.IEFindCacheCookieImporter">
            <summary>
            IEのCacheファイルから直接Cookieを取得します。
            </summary>
        </member>
        <member name="M:SunokoLibrary.Application.Browsers.IEFindCacheCookieImporter.ParseCookies(System.String)">
            <summary>
            IEのCookieテキストからCookieを取得します。
            </summary>
            <exception cref="T:SunokoLibrary.Application.CookieImportException" />
        </member>
        <member name="M:SunokoLibrary.Application.Browsers.IEFindCacheCookieImporter.ReadAllTextIfHasSendableCookie(System.String,System.Uri)">
            <summary>
            IEのCookieファイルを読み込みます。この時、引数sendingTargetへ送信できる
            Cookieが含まれるファイルのみが読み込まれます。
            </summary>
            <param name="cacheFilePath">Cookieファイル</param>
            <param name="sendingTarget">通信したいURL</param>
            <returns>Cookieファイル本文。</returns>
            <exception cref="T:SunokoLibrary.Application.CookieImportException" />
            <exception cref="T:System.OutOfMemoryException" />
        </member>
        <member name="T:SunokoLibrary.Application.Browsers.IEPMCookieImporter">
            <summary>
            保護モードIEブラウザからCookieを取得します。
            </summary>
        </member>
        <member name="T:SunokoLibrary.Application.Browsers.SqlCookieImporter">
            <summary>
            Cookieの保存にSQLiteを使用するタイプのブラウザからCookieを取得します。
            </summary>
        </member>
        <member name="M:SunokoLibrary.Application.Browsers.SqlCookieImporter.LookupCookies(System.String,System.String,System.Func{System.Object[],System.Net.Cookie})">
            <summary>
            DBから指定したクエリでCookieを取得します。
            </summary>
            <param name="path">参照先DBファイル</param>
            <param name="query">実行するクエリ</param>
            <param name="dataConverter">レコードからCookieへ変換するメソッド</param>
            <returns>取得されたCookies</returns>
            <exception cref="T:SunokoLibrary.Application.CookieImportException" />
        </member>
        <member name="M:SunokoLibrary.Application.Browsers.SqlCookieImporter.LookupEntry(System.String,System.String)">
            <summary>
            DBに対してエントリ照会を行います。
            </summary>
            <param name="path">参照先DBファイル</param>
            <param name="query">実行するクエリ</param>
            <exception cref="T:SunokoLibrary.Application.CookieImportException">一時ファイル生成失敗。DB照会失敗。</exception>
        </member>
        <member name="T:SunokoLibrary.Application.Browsers.WebkitQtCookieImporter">
            <summary>
            Qt上のWebkitでよく使われるCookieファイル形式からCookieを取得します。
            </summary>
        </member>
        <member name="T:SunokoLibrary.Application.ICookieImporter">
            <summary>
            ブラウザからのCookieを取得する機能を定義します。
            </summary>
        </member>
        <member name="P:SunokoLibrary.Application.ICookieImporter.SourceInfo">
            <summary>
            Cookieを取得するブラウザに関する情報を取得します。
            </summary>
        </member>
        <member name="P:SunokoLibrary.Application.ICookieImporter.CookiePathType">
            <summary>
            Cookie保存の形態を取得します。
            </summary>
        </member>
        <member name="P:SunokoLibrary.Application.ICookieImporter.IsAvailable">
            <summary>
            利用可能かどうかを取得します。
            </summary>
        </member>
        <member name="P:SunokoLibrary.Application.ICookieImporter.PrimaryLevel">
            <summary>
            並べ替え時に用いられる数値を取得します。OSブラウザ: 0、有名ブラウザ: 1、派生ブラウザ: 2。
            </summary>
        </member>
        <member name="M:SunokoLibrary.Application.ICookieImporter.Generate(SunokoLibrary.Application.CookieSourceInfo)">
            <summary>
            自身と設定の異なるICookieImporterを生成します。
            </summary>
        </member>
        <member name="M:SunokoLibrary.Application.ICookieImporter.GetCookiesAsync(System.Uri)">
            <summary>
            指定されたURLとの通信に使えるCookieを返します。
            </summary>
            <param name="targetUrl">通信先のURL</param>
            <returns>処理の成功不成功</returns>
        </member>
        <member name="T:SunokoLibrary.Application.CookieImportResult">
            <summary>
            Cookie取得結果を扱うクラスです。
            </summary>
        </member>
        <member name="P:SunokoLibrary.Application.CookieImportResult.Cookies">
            <summary>
            ブラウザから取得されたCookieを取得します。
            </summary>
        </member>
        <member name="P:SunokoLibrary.Application.CookieImportResult.Status">
            <summary>
            処理の成功不成功の状態を取得します。
            </summary>
        </member>
        <member name="M:SunokoLibrary.Application.CookieImportResult.AddTo(System.Net.CookieContainer)">
            <summary>
            引数として指定したCookieContainerにブラウザから取得したCookieを追加します。
            </summary>
            <param name="targetContainer">追加先のコンテナ</param>
            <returns>インスタンスが保持するStatusをそのまま返します。</returns>
        </member>
        <member name="T:SunokoLibrary.Application.CookiePathType">
            <summary>
            パス指定対象の種類を定義します。
            </summary>
        </member>
        <member name="F:SunokoLibrary.Application.CookiePathType.File">
            <summary>ファイル</summary>
        </member>
        <member name="F:SunokoLibrary.Application.CookiePathType.Directory">
            <summary>フォルダ</summary>
        </member>
        <member name="T:SunokoLibrary.Application.CookieImportState">
            <summary>
            Cookie取得の実行結果を定義します。
            </summary>
        </member>
        <member name="F:SunokoLibrary.Application.CookieImportState.Success">
            <summary>処理が正常終了状態にあります。</summary>
        </member>
        <member name="F:SunokoLibrary.Application.CookieImportState.Unavailable">
            <summary>処理出来る状態下にありませんでした。</summary>
        </member>
        <member name="F:SunokoLibrary.Application.CookieImportState.AccessError">
            <summary>データの参照に失敗。処理は中断されています。</summary>
        </member>
        <member name="F:SunokoLibrary.Application.CookieImportState.ConvertError">
            <summary>データの解析に失敗。処理は中断されています。</summary>
        </member>
        <member name="F:SunokoLibrary.Application.CookieImportState.UnknownError">
            <summary>処理に失敗。想定されていないエラーが発生しています。</summary>
        </member>
        <member name="T:SunokoLibrary.Application.ICookieImporterFactory">
            <summary>
            ブラウザに対して行える操作を定義します。
            </summary>
        </member>
        <member name="P:SunokoLibrary.Application.ICookieImporterFactory.EngineIds">
            <summary>
            対応しているブラウザエンジンの識別子の配列を取得します。
            </summary>
        </member>
        <member name="M:SunokoLibrary.Application.ICookieImporterFactory.GetCookieImporters">
            <summary>
            利用可能なすべてのICookieImporterを取得します。
            </summary>
        </member>
        <member name="M:SunokoLibrary.Application.ICookieImporterFactory.GetCookieImporter(SunokoLibrary.Application.CookieSourceInfo)">
            <summary>
            指定されたブラウザ構成情報からICookieImporterを取得します。
            </summary>
            <param name="sourceInfo">元となるブラウザ構成情報。</param>
            <returns>引数で指定されたブラウザを参照するインスタンス。</returns>
        </member>
        <member name="T:SunokoLibrary.Application.ICookieImporterManager">
            <summary>
            使用可能なICookieImporterの管理を行う機能を定義します。
            </summary>
        </member>
        <member name="M:SunokoLibrary.Application.ICookieImporterManager.GetInstancesAsync(System.Boolean)">
            <summary>
            使用できるICookieImporterのリストを取得します。
            </summary>
            <param name="availableOnly">利用可能なものに絞る</param>
        </member>
        <member name="M:SunokoLibrary.Application.ICookieImporterManager.GetInstanceAsync(SunokoLibrary.Application.CookieSourceInfo,System.Boolean)">
            <summary>
            設定値を指定したICookieImporterを取得します。アプリ終了時に直前まで使用していた
            ICookieImporterのSourceInfoを設定として保存すれば、起動時にSourceInfoをこのメソッドに
            渡す事で適切なICookieImporterを再生成してくれる。
            </summary>
            <param name="targetSourceInfo">再取得対象のブラウザの構成情報</param>
            <param name="allowDefault">取得不可の場合に既定のCookieImporterを返すかを指定できます。</param>
        </member>
        <member name="T:SunokoLibrary.Application.CookieImportException">
            <summary>
            Cookie取得に関する例外。
            </summary>
        </member>
        <member name="M:SunokoLibrary.Application.CookieImportException.#ctor(System.String,SunokoLibrary.Application.CookieImportState)">
            <summary>例外を生成します。</summary>
            <param name="message">エラーの捕捉</param>
            <param name="result">エラーの種類</param>
        </member>
        <member name="M:SunokoLibrary.Application.CookieImportException.#ctor(System.String,SunokoLibrary.Application.CookieImportState,System.Exception)">
            <summary>例外を再スローさせるための例外を生成します。</summary>
            <param name="message">エラーの捕捉</param>
            <param name="result">エラーの種類</param>
            <param name="inner">内部例外</param>
        </member>
        <member name="P:SunokoLibrary.Application.CookieImportException.Result">
            <summary>
            例外要因の大まかな種類
            </summary>
        </member>
        <member name="T:SunokoLibrary.Application.IProxyService">
            <summary>
            親プロセスと異なるモード下で動かしている子プロセスが公開する機能を定義します。
            </summary>
        </member>
        <member name="M:SunokoLibrary.Application.Utility.ReplacePathSymbols(System.String)">
            <summary>
            %APPDATA%などを実際のパスに変換します。
            </summary>
            <param name="path"></param>
            <returns></returns>
        </member>
        <member name="M:SunokoLibrary.Application.Win32Api.CryptProtectedData(System.Byte[])">
            <summary>
            CryptProtectDataでデータを暗号化します。
            </summary>
            <param name="unencryptedData">処理対象のデータ</param>
            <returns>暗号化されたデータ</returns>
        </member>
        <member name="M:SunokoLibrary.Application.Win32Api.DecryptProtectedData(System.Byte[])">
            <summary>
            CryptUnprotectDataで暗号化されたデータを復号化します。
            </summary>
            <param name="encryptedData">暗号化されたデータ</param>
            <returns>復号化されたデータ</returns>
        </member>
        <member name="M:SunokoLibrary.Application.Win32Api.GetCookiesFromProtectedModeIE(System.String@,System.Uri,System.String,System.UInt32)">
            <summary>
            保護モードIEからCookieを取得します。
            </summary>
            <param name="cookiesText">取得したCookieの代入先</param>
            <param name="targetUrl">Cookieを送りたいページのURL</param>
            <param name="valueKey">読み出したいCookieのキー値</param>
            <param name="paramsFlag">取得するCookieの範囲フラグ</param>
            <returns>引数targetUrlに対して使えるCookieヘッダー値</returns>
        </member>
        <member name="M:SunokoLibrary.Application.Win32Api.GetCookiesFromIE(System.String@,System.Uri,System.String,System.UInt32)">
            <summary>
            従来モードIEからCookieを取得します。
            </summary>
            <param name="cookiesText">取得したCookieの代入先</param>
            <param name="targetUrl">Cookieを送りたいページのURL</param>
            <param name="valueKey">読み出したいCookieのキー値</param>
            <param name="paramsFlag">取得するCookieの範囲フラグ</param>
            <returns>引数targetUrlに対して使えるCookieヘッダー値</returns>
        </member>
        <member name="M:SunokoLibrary.Application.Win32Api.GetIEVersion">
            <summary>
            IEのバージョンを取得します。
            </summary>
            <returns>ex:11.0.9600.17239</returns>
        </member>
        <member name="T:SunokoLibrary.Windows.ViewModels.CookieSourceSelector">
            <summary>
            ブラウザ選択UI用ViewModel。CookieImportersとUIの間を取り持ち、UI側の状態遷移を保持します。
            </summary>
        </member>
        <member name="M:SunokoLibrary.Windows.ViewModels.CookieSourceSelector.#ctor(SunokoLibrary.Application.ICookieImporterManager,System.Func{SunokoLibrary.Application.ICookieImporter,SunokoLibrary.Windows.ViewModels.CookieSourceItem})">
            <summary>
            指定されたManagerからの項目を使用するインスタンスを生成します。
            </summary>
            <param name="importerManager">使用するManager</param>
            <param name="itemGenerator">取得されたICookieImporterからブラウザ項目のViewModelを生成するメソッド</param>
        </member>
        <member name="P:SunokoLibrary.Windows.ViewModels.CookieSourceSelector.IsUpdating">
            <summary>
            メンバの内容の更新中であるかを取得します。
            </summary>
        </member>
        <member name="P:SunokoLibrary.Windows.ViewModels.CookieSourceSelector.IsAllBrowserMode">
            <summary>
            使用可能なブラウザのみを取得するかを取得、設定します。
            </summary>
        </member>
        <member name="P:SunokoLibrary.Windows.ViewModels.CookieSourceSelector.SelectedIndex">
            <summary>
            選択中のブラウザのインデックスを取得、設定します。
            </summary>
        </member>
        <member name="P:SunokoLibrary.Windows.ViewModels.CookieSourceSelector.SelectedImporter">
            <summary>
            選択中のブラウザのICookieImporterを取得します。
            </summary>
        </member>
        <member name="P:SunokoLibrary.Windows.ViewModels.CookieSourceSelector.Items">
            <summary>
            使用可能なブラウザを取得します。
            </summary>
        </member>
        <member name="M:SunokoLibrary.Windows.ViewModels.CookieSourceSelector.UpdateAsync">
            <summary>
            Itemsを更新します。
            </summary>
        </member>
        <member name="M:SunokoLibrary.Windows.ViewModels.CookieSourceSelector.SetInfoAsync(SunokoLibrary.Application.CookieSourceInfo)">
            <summary>
            任意のブラウザ構成を設定します。カスタム設定の構成も設定可能です。
            </summary>
            <param name="info">ブラウザの構成設定</param>
        </member>
        <member name="E:SunokoLibrary.Windows.ViewModels.CookieSourceSelector.PropertyChanged">
            <summary>
            プロパティが更新された事を通知します。
            </summary>
        </member>
        <member name="M:SunokoLibrary.Windows.ViewModels.CookieSourceSelector.OnPropertyChanged(System.String)">
            <summary>
            PropertyChangedイベントを起こします。
            </summary>
        </member>
        <member name="T:SunokoLibrary.Windows.ViewModels.CookieSourceItem">
            <summary>
            ブラウザ選択UIにおける各ブラウザ項目用ViewModel。可視化対象のICookieImporterを持ち、UI上での項目表示を保持します。
            </summary>
        </member>
        <member name="M:SunokoLibrary.Windows.ViewModels.CookieSourceItem.#ctor(SunokoLibrary.Application.ICookieImporter)">
            <summary>
            指定されたICookieImporterからインスタンスを生成します。
            </summary>
            <param name="importer">対象のブラウザ</param>
        </member>
        <member name="P:SunokoLibrary.Windows.ViewModels.CookieSourceItem.Importer">
            <summary>
            Cookie取得用インスタンスを取得します。
            </summary>
        </member>
        <member name="P:SunokoLibrary.Windows.ViewModels.CookieSourceItem.IsCustomized">
            <summary>
            既存の項目に設定変更を行って生成した項目かどうかを取得します。
            </summary>
        </member>
        <member name="P:SunokoLibrary.Windows.ViewModels.CookieSourceItem.BrowserName">
            <summary>
            ブラウザの名前を取得します。
            </summary>
        </member>
        <member name="P:SunokoLibrary.Windows.ViewModels.CookieSourceItem.ProfileName">
            <summary>
            識別名を取得します。
            </summary>
        </member>
        <member name="P:SunokoLibrary.Windows.ViewModels.CookieSourceItem.DisplayText">
            <summary>
            画面上で表示される文字列を取得します。
            </summary>
        </member>
        <member name="M:SunokoLibrary.Windows.ViewModels.CookieSourceItem.Initialize">
            <summary>
            初期化を行う際に呼び出されます。呼び出す必要はありません。オーバーライドして使用してください。
            </summary>
        </member>
        <member name="E:SunokoLibrary.Windows.ViewModels.CookieSourceItem.PropertyChanged">
            <summary>
            プロパティが更新された事を通知します。
            </summary>
        </member>
        <member name="M:SunokoLibrary.Windows.ViewModels.CookieSourceItem.OnPropertyChanged(System.String)">
            <summary>
            PropertyChangedイベントを起こします。
            </summary>
        </member>
    </members>
</doc>
